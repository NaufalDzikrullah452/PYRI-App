{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  let { freeBook, e } = req?.body;\n  let res = \"Failure\";\n  if (e === \"Create\") {\n    const createfreeBook = await db.freeBook.create({\n      data: { ...freeBook },\n    });\n    res = \"Insert Success\";\n  }\n  if (e === \"Update\") {\n    const updatefreeBook = await db.freeBook.update({\n      where: {\n        freeBook_id: freeBook.freeBook_id,\n      },\n      data: { ...freeBook },\n    });\n    freeBook = updatefreeBook;\n    res = \"Update Success\";\n  }\n  if (e === \"UpdateByUserId\") {\n    const updatefreeBook = await db.freeBook.update({\n      where: {\n        freeBook_user_id: freeBook.freeBook_user_id,\n      },\n      data: { ...freeBook },\n    });\n    freeBook = updatefreeBook;\n    res = \"Update Success\";\n  }\n  if (e === \"Upsert\") {\n    const updatefreeBook = await db.freeBook.upsert({\n      where: {\n        freeBook_user_id: freeBook.freeBook_user_id,\n      },\n      update: {\n        freeBook_amount: 3,\n        freeBook_date_registered: freeBook.freeBook_date_registered,\n        freeBook_date_updated: freeBook.freeBook_date_updated,\n      },\n      create: { ...freeBook },\n    });\n    freeBook = updatefreeBook;\n    res = \"Upsert Success\";\n  }\n  if (e === \"ReadByUserId\") {\n    const updatefreeBook = await db.freeBook.findUnique({\n      where: {\n        freeBook_user_id: freeBook.freeBook_user_id,\n      },\n    });\n    freeBook = updatefreeBook;\n    res = \"Read user free Success\";\n  }\n  reply.send({\n    res: res,\n    freeBook,\n    e,\n  })\n}","figma":{}},"title":"api-free-book","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/free-books","site":"*","id":"34625"}