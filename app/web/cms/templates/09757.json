{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  //API PAGE\n  let { page, e } = req?.body;\n  console.log(page);\n  let res = \"Failure\";\n  if (e === \"Create\") {\n    const createPage = await db.page.create({\n      data: { ...page },\n    }); //insert database\n    res = \"Insert Success\";\n  }\n  if (e === \"Update\") {\n    const updatePage = await db.page.update({\n      where: {\n        page_id: page.page_id,\n      },\n      data: { ...page },\n    });\n    // console.log(updateUser);\n    page = updatePage;\n    res = \"Update Success\";\n  }\n  if (e === \"ReadAll\") {\n    const readPage = await db.page.findMany({\n      orderBy: {\n        page_page: \"asc\",\n      },\n    });\n    page = readPage;\n    // console.log(page);\n    res = \"Read page Success\";\n  }\n  if (e === \"ReadById\") {\n    const readPage = await db.page.findFirst({\n      where: {\n        page_id: page.page_id,\n      },\n    });\n    page = readPage;\n    // console.log(user.page.page_name);\n    res = page ? \"Read page Success\" : \"page not found\";\n  }\n\n  if (e === \"ReadByBookId\") {\n    const readpage = await db.page.findMany({\n      where: {\n        page_book_id: page.page_book_id,\n      },\n    });\n    page = readpage;\n    // console.log(user.page.page_name);\n    res = page ? \"Read page Success\" : \"Page not found\";\n  }\n  if (e === \"ReadByChapterId\") {\n    const readpage = await db.page.findMany({\n      where: {\n        page_chapter_id: page.page_chapter_id,\n      },\n      orderBy: {\n        page_page: \"asc\",\n      },\n    });\n    page = readpage;\n    // console.log(user.page.page_name);\n    res = page ? \"Read page Success\" : \"Page not found\";\n  }\n\n  if (e === \"ReadByBookChapterId\") {\n    const readpage = await db.page.findMany({\n      where: {\n        page_chapter_id: page.page_chapter_id,\n        page_book_id: page.page_book_id,\n      },\n      orderBy: {\n        page_page: \"asc\",\n      },\n    });\n    page = readpage;\n    // console.log(user.page.page_name);\n    res = page ? \"Read page Success\" : \"Page not found\";\n  }\n\n  if (e === \"Searching\") {\n    const key = \"%\" + page.page_page + \"%\";\n    const readPage = await db.page.findMany({\n      where: {\n        page_chapter_id: page.page_chapter_id,\n        page_page: {\n          contains: key,\n          mode: \"insensitive\",\n        },\n      },\n      orderBy: {\n        page_page: \"asc\",\n      },\n    });\n    page = readPage;\n    // console.log(page);\n    res = \"Read page Success\";\n  }\n  if (e === \"Delete\") {\n    try {\n      page = await db.page.delete({\n        where: {\n          page_id: page.page_id,\n        },\n      });\n      res = \"Delete Success\";\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  reply.send({\n    res: res,\n    page,\n    e,\n  })\n}","figma":{}},"title":"api-page","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"66283","slug":"/api/page","site":"*","id":"09757"}