{"title":"api-categories","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  let { category, e } = req?.body;\n\n  let res = \"Failure\";\n  if (e === \"Create\") {\n    const createcategory = await db.category.create({\n      data: { ...category },\n    });\n    res = \"Insert Success\";\n  }\n  if (e === \"Update\") {\n    const updatecategory = await db.category.update({\n      where: {\n        category_id: category.category_id,\n      },\n      data: { ...category },\n    });\n    category = updatecategory;\n    res = \"Update Success\";\n  }\n  if (e === \"ReadAll\") {\n    const readcategory = await db.category.findMany({\n      orderBy: {\n        category_id: \"asc\",\n      },\n    });\n    category = readcategory;\n    res = \"Read tags Success\";\n  }\n  if (e === \"ReadById\") {\n    const readcategory = await db.category.findFirst({\n      where: {\n        category_id: category.category_id,\n      },\n    });\n    category = readcategory;\n    res = category ? \"Read category Success\" : \"category not found\";\n  }\n  if (e === \"Delete\") {\n    try {\n      category = await db.category.delete({\n        where: {\n          category_id: category.category_id,\n        },\n      });\n      res = \"Delete Success\";\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  reply.send({\n    res: res,\n    category,\n    e,\n  })\n}","figma":{}},"slug":"/api/categories","site":"*","id":"35353"}