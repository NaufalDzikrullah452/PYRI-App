{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  let { publisher, e } = req?.body;\n  console.log(publisher);\n  let res = \"Failure\";\n  if (e === \"Create\") {\n    const createPublisher = await db.publisher.create({\n      data: publisher,\n    }); //insert database\n    res = \"Insert Publisher Success\";\n  }\n  if (e === \"Update\") {\n    const updatePublisher = await db.publisher.update({\n      where: {\n        publisher_id: publisher.publisher_id,\n      },\n      data: publisher,\n    });\n    // console.log(updateUser);\n    publisher = updatePublisher;\n    res = \"Update Publisher Success\";\n  }\n  if (e === \"ReadAll\") {\n    const readPublisher = await db.publisher.findMany({\n      orderBy: {\n        publisher_id: \"asc\",\n      },\n    });\n    publisher = readPublisher;\n    // console.log(publisher);\n    res = \"Read publisher Success\";\n  }\n  if (e === \"ReadById\") {\n    const readPublisher = await db.publisher.findFirst({\n      where: {\n        publisher_id: publisher.publisher_id,\n      },\n    });\n    publisher = readPublisher;\n    // console.log(user.publisher.Publisher_name);\n    res = publisher ? \"Read publisher Success\" : \"Publisher not found\";\n  }\n  if (e === \"Delete\") {\n    try {\n      publisher = await db.publisher.delete({\n        where: {\n          publisher_id: publisher.publisher_id,\n        },\n      });\n      res = \"Delete publisher Success\";\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  if (e === \"Searching\") {\n    const key = \"%\" + publisher.publisher_name + \"%\";\n    const readpublisher = await db.publisher.findMany({\n      where: {\n        publisher_name: {\n          contains: key,\n          mode: \"insensitive\",\n        },\n      },\n    });\n    publisher = readpublisher;\n    // console.log(authors);\n    res = \"Read publisher Success\";\n  }\n  reply.send({\n    res: res,\n    publisher,\n    e,\n  })\n}","figma":{}},"title":"api-publisher","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/publisher","site":"*","id":"70606"}