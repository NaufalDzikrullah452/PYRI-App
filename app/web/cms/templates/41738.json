{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  let { comment, e } = req?.body;\n  // console.log(comment);\n  let res = \"Failure\";\n  if (e === \"Create\") {\n    const createcomment = await db.comment.create({\n      data: { ...comment },\n    }); //insert database\n    res = \"Insert Success\";\n  }\n  if (e === \"Update\") {\n    const updatecomment = await db.comment.update({\n      where: {\n        comment_id: comment.comment_id,\n      },\n      data: { ...comment },\n    });\n    // console.log(updateUser);\n    comment = updatecomment;\n    res = \"Update Success\";\n  }\n  if (e === \"ReadAll\") {\n    const readcomment = await db.comment.findMany({\n      orderBy: {\n        comment_id: \"asc\",\n      },\n    });\n    comment = readcomment;\n    // console.log(comment);\n    res = \"Read comment Success\";\n  }\n  if (e === \"ReadById\") {\n    const readcomment = await db.comment.findFirst({\n      where: {\n        comment_id: parseInt(comment.comment_id),\n      },\n    });\n    comment = readcomment;\n    // console.log(user.comment.comment_name);\n    res = comment ? \"Read comment Success\" : \"comment not found\";\n  }\n  if (e === \"ReadByBookId\") {\n    const readcomment = await db.comment.findMany({\n      where: {\n        comment_book_id: parseInt(comment.comment_book_id),\n      },\n      include: {\n        books: true,\n        users: true,\n      },\n      orderBy: {\n        comment_date_updated: \"desc\",\n      },\n    });\n    comment = readcomment;\n    // console.log(comment);\n    res = comment ? \"Read comment Success\" : \"comment not found\";\n  }\n  if (e === \"Delete\") {\n    try {\n      comment = await db.comment.delete({\n        where: {\n          comment_id: comment.comment_id,\n        },\n      });\n      res = \"Delete Success\";\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  if (e === \"Searching\") {\n    const key = \"%\" + comment.comment_description + \"%\";\n    const readcomment = await db.comment.findMany({\n      where: {\n        comment_description: {\n          contains: key,\n          mode: \"insensitive\",\n        },\n      },\n      orderBy: {\n        comment_date_updated: \"desc\",\n      },\n      include: {\n        users: true,\n      },\n    });\n    comment = readcomment;\n    // console.log(comment);\n    res = \"Read publisher Success\";\n  }\n  reply.send({\n    res: res,\n    comment,\n    e,\n  })\n}","figma":{}},"title":"api-comment","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"66283","slug":"/api/comment","site":"*","id":"41738"}