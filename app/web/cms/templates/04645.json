{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  let { viewBook, e } = req?.body;\n  console.log(viewBook);\n  let res = \"Failure\";\n  if (e === \"Create\") {\n    const createviewBook = await db.viewBook.create({\n      data: { ...viewBook },\n    }); //insert database\n    res = \"Insert Success\";\n  }\n  if (e === \"Update\") {\n    const updateviewBook = await db.viewBook.update({\n      where: {\n        viewBook_id: viewBook.viewBook_id,\n      },\n      data: { ...viewBook },\n    });\n    // console.log(updateUser);\n    viewBook = updateviewBook;\n    res = \"Update Success\";\n  }\n  if (e === \"ReadAll\") {\n    const readviewBook = await db.viewBook.findMany({\n      orderBy: {\n        viewBook_id: \"asc\",\n      },\n    });\n    viewBook = readviewBook;\n    // console.log(viewBook);\n    res = \"Read viewBook Success\";\n  }\n  if (e === \"ReadLatestChapter\") {\n    const readviewBook = await db.viewBook.findFirst({\n      where: {\n        viewBook_book_id: viewBook.viewBook_book_id,\n        viewBook_user_id: viewBook.viewBook_user_id,\n      },\n      orderBy: {\n        viewBook_access_date: \"desc\",\n      },\n    });\n    viewBook = readviewBook;\n    // console.log(viewBook);\n    res = \"Read viewBook Success\";\n  }\n  if (e === \"ReadById\") {\n    const readviewBook = await db.viewBook.findFirst({\n      where: {\n        viewBook_id: viewBook.viewBook_id,\n      },\n    });\n    viewBook = readviewBook;\n    // console.log(user.viewBook.viewBook_name);\n    res = viewBook ? \"Read viewBook Success\" : \"viewBook not found\";\n  }\n  if (e === \"ReadByBookId\") {\n    const readviewBook = await db.viewBook.findMany({\n      where: {\n        viewBook_book_id: viewBook.viewBook_book_id,\n      },\n    });\n    viewBook = readviewBook;\n    // console.log(user.viewBook.viewBook_name);\n    res = viewBook ? \"Read viewBook Success\" : \"viewBook not found\";\n  }\n  if (e === \"ReadByUserId\") {\n    const readviewBook = await db.viewBook.findMany({\n      distinct: [\"viewBook_book_id\"],\n      where: {\n        viewBook_user_id: viewBook.viewBook_user_id,\n      },\n      orderBy: {\n        viewBook_access_date: \"desc\",\n      },\n      include: {\n        books: {\n          include: {\n            page: true,\n          },\n        },\n        chapter: true,\n      },\n    });\n    viewBook = readviewBook;\n    // console.log(user.viewBook.viewBook_name);\n    res = viewBook ? \"Read viewBook Success\" : \"viewBook not found\";\n  }\n  if (e === \"ReadByAllId\") {\n    const readviewBook = await db.viewBook.findFirst({\n      where: {\n        viewBook_user_id: viewBook.viewBook_user_id,\n        viewBook_book_id: viewBook.viewBook_book_id,\n        viewBook_chapter_id: viewBook.viewBook_chapter_id,\n        viewBook_page_id: viewBook.viewBook_page_id,\n      },\n    });\n    viewBook = readviewBook;\n    // console.log(user.viewBook.viewBook_name);\n    res = viewBook ? \"Read viewBook Success\" : \"viewBook not found\";\n  }\n  if (e === \"ReadLatestPages\") {\n    const readviewBook = await db.viewBook.findFirst({\n      where: {\n        viewBook_user_id: viewBook.viewBook_user_id,\n        viewBook_book_id: viewBook.viewBook_book_id,\n        viewBook_chapter_id: viewBook.viewBook_chapter_id,\n      },\n      orderBy: {\n        viewBook_access_date: \"desc\",\n      },\n    });\n    viewBook = readviewBook;\n    // console.log(user.viewBook.viewBook_name);\n    res = viewBook ? \"Read viewBook Success\" : \"viewBook not found\";\n  }\n  if (e === \"Delete\") {\n    try {\n      viewBook = await db.viewBook.delete({\n        where: {\n          viewBook_id: viewBook.viewBook_id,\n        },\n      });\n      res = \"Delete Success\";\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  reply.send({\n    res: res,\n    viewBook,\n    e,\n  })\n}","figma":{}},"title":"api-history-book","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"66283","slug":"/api/history-book","site":"*","id":"04645"}