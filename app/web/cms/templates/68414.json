{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  //API CHAPTER\n  let { chapter, e } = req?.body;\n  console.log(chapter);\n  let res = \"Failure\";\n  if (e === \"Create\") {\n    const createChapter = await db.chapter.create({\n      data: { ...chapter },\n    }); //insert database\n    res = \"Insert Success\";\n  }\n  if (e === \"Update\") {\n    const updateChapter = await db.chapter.update({\n      where: {\n        chapter_id: chapter.chapter_id,\n      },\n      data: { ...chapter },\n    });\n    // console.log(updateUser);\n    chapter = updateChapter;\n    res = \"Update Success\";\n  }\n  if (e === \"ReadAll\") {\n    const readChapter = await db.chapter.findMany({\n      orderBy: {\n        chapter_id: \"asc\",\n      },\n    });\n    chapter = readChapter;\n    // console.log(chapter);\n    res = \"Read chapter Success\";\n  }\n  if (e === \"ReadById\") {\n    const readChapter = await db.chapter.findFirst({\n      where: {\n        chapter_id: chapter.chapter_id,\n      },\n    });\n    chapter = readChapter;\n    // console.log(user.chapter.chapter_name);\n    res = chapter ? \"Read chapter Success\" : \"chapter not found\";\n  }\n  if (e === \"ReadByBookId\") {\n    const readChapter = await db.chapter.findMany({\n      where: {\n        chapter_book_id: chapter.chapter_book_id,\n      },\n      orderBy: {\n        chapter_number: \"asc\",\n      },\n      include: {\n        page: true,\n      },\n    });\n    chapter = readChapter;\n    // console.log(user.chapter.chapter_name);\n    res = chapter ? \"Read chapter Success (number asc)\" : \"chapter not found\";\n  }\n  if (e === \"Delete\") {\n    try {\n      chapter = await db.chapter.delete({\n        where: {\n          chapter_id: chapter.chapter_id,\n        },\n      });\n      res = \"Delete Success\";\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  if (e === \"Searching\") {\n    const key = \"%\" + chapter.chapter_name + \"%\";\n    const readchapter = await db.chapter.findMany({\n      where: {\n        chapter_book_id: chapter.chapter_book_id,\n        chapter_name: {\n          contains: key,\n          mode: \"insensitive\",\n        },\n      },\n    });\n    chapter = readchapter;\n    // console.log(authors);\n    res = \"Read chapter Success\";\n  }\n  reply.send({\n    res: res,\n    chapter,\n    e,\n  })\n}","figma":{}},"title":"api-chapter","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"66283","slug":"/api/chapter","site":"*","id":"68414"}